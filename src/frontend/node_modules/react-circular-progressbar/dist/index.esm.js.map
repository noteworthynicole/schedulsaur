{"version":3,"file":"index.esm.js","sources":["../src/constants.ts","../src/Path.tsx","../src/CircularProgressbar.tsx"],"sourcesContent":["export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nconst MIN_PERCENTAGE = 0;\nconst MAX_PERCENTAGE = 100;\n\nfunction Path({\n  className,\n  counterClockwise,\n  pathRadius,\n  percentage,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  pathRadius: number;\n  percentage: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, percentage, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  pathRadius,\n  percentage,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  percentage: number;\n  counterClockwise: boolean;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n\n  // Keep percentage within range (MIN_PERCENTAGE, MAX_PERCENTAGE)\n  const truncatedPercentage = Math.min(Math.max(percentage, MIN_PERCENTAGE), MAX_PERCENTAGE);\n  const gapLength = (1 - truncatedPercentage / 100) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import React from 'react';\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\n\ntype CircularProgressbarDefaultProps = {\n  strokeWidth: number;\n  className: string;\n  text: string;\n  background: boolean;\n  backgroundPadding: number;\n  initialAnimation: boolean;\n  counterClockwise: boolean;\n  circleRatio: number;\n  classes: {\n    root: string;\n    trail: string;\n    path: string;\n    text: string;\n    background: string;\n  };\n  styles: {\n    root?: object;\n    trail?: object;\n    path?: object;\n    text?: object;\n    background?: object;\n  };\n};\n\ntype CircularProgressbarProps = CircularProgressbarDefaultProps & {\n  percentage: number;\n};\n\ntype CircularProgressbarState = {\n  percentage: number;\n};\n\nclass CircularProgressbar extends React.Component<\n  CircularProgressbarProps,\n  CircularProgressbarState\n> {\n  initialTimeout: number | undefined = undefined;\n  requestAnimationFrame: number | undefined = undefined;\n\n  static defaultProps: CircularProgressbarDefaultProps = {\n    strokeWidth: 8,\n    className: '',\n    text: '',\n    background: false,\n    backgroundPadding: 0,\n    initialAnimation: false,\n    counterClockwise: false,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n  };\n\n  constructor(props: CircularProgressbarProps) {\n    super(props);\n\n    this.state = {\n      percentage: props.initialAnimation ? 0 : props.percentage,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.initialAnimation) {\n      this.initialTimeout = window.setTimeout(() => {\n        this.requestAnimationFrame = window.requestAnimationFrame(() => {\n          this.setState({\n            percentage: this.props.percentage,\n          });\n        });\n      }, 0);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: CircularProgressbarProps) {\n    this.setState({\n      percentage: nextProps.percentage,\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.initialTimeout);\n    if (this.requestAnimationFrame) {\n      window.cancelAnimationFrame(this.requestAnimationFrame);\n    }\n  }\n\n  getBackgroundPadding() {\n    if (this.props.background) {\n      // Default padding to be the same as strokeWidth\n      // Compare to null because 0 is falsy\n      if (this.props.backgroundPadding == null) {\n        return this.props.strokeWidth;\n      }\n      return this.props.backgroundPadding;\n    }\n    // Don't add padding if not displaying background\n    return 0;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  render() {\n    const {\n      className,\n      classes,\n      counterClockwise,\n      percentage,\n      styles,\n      strokeWidth,\n      text,\n      circleRatio,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          pathRadius={pathRadius}\n          percentage={100 * circleRatio}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          pathRadius={pathRadius}\n          percentage={percentage * circleRatio}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n"],"names":["tslib_1.__extends"],"mappings":"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"}