{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar radius = 175;\nvar diameter = Math.round(Math.PI * radius * 2);\n\nvar getOffset = function getOffset(val) {\n  if (val === void 0) {\n    val = 0;\n  }\n\n  return Math.round((100 - val) / 100 * diameter);\n};\n\nvar Circle = function (_super) {\n  __extends(Circle, _super);\n\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Circle.prototype, \"text\", {\n    get: function get() {\n      var _a = this.props,\n          progress = _a.progress,\n          showPercentage = _a.showPercentage,\n          textColor = _a.textColor,\n          textStyle = _a.textStyle,\n          percentSpacing = _a.percentSpacing,\n          showPercentageSymbol = _a.showPercentageSymbol;\n      if (!showPercentage) return;\n      return React.createElement(\"text\", {\n        style: textStyle,\n        fill: textColor,\n        x: \"50%\",\n        y: \"50%\",\n        dx: \"-25\",\n        textAnchor: \"middle\"\n      }, progress, showPercentageSymbol && React.createElement(\"tspan\", {\n        dx: percentSpacing\n      }, \"%\"));\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Circle.prototype.render = function () {\n    var text = this.text;\n    var _a = this.props,\n        progress = _a.progress,\n        size = _a.size,\n        bgColor = _a.bgColor,\n        progressColor = _a.progressColor,\n        lineWidth = _a.lineWidth,\n        animate = _a.animate,\n        animationDuration = _a.animationDuration,\n        roundedStroke = _a.roundedStroke,\n        responsive = _a.responsive,\n        onAnimationEnd = _a.onAnimationEnd;\n    var strokeDashoffset = getOffset(progress);\n    var transition = animate ? \"stroke-dashoffset \" + animationDuration + \" ease-out\" : null;\n    var strokeLinecap = roundedStroke ? 'round' : 'butt';\n    var svgSize = responsive ? '100%' : size;\n    return React.createElement(\"svg\", {\n      width: svgSize,\n      height: svgSize,\n      viewBox: \"-25 -25 400 400\"\n    }, React.createElement(\"circle\", {\n      stroke: bgColor,\n      cx: \"175\",\n      cy: \"175\",\n      r: \"175\",\n      strokeWidth: lineWidth,\n      fill: \"none\"\n    }), React.createElement(\"circle\", {\n      stroke: progressColor,\n      transform: \"rotate(-90 175 175)\",\n      cx: \"175\",\n      cy: \"175\",\n      r: \"175\",\n      strokeDasharray: \"1100\",\n      strokeWidth: lineWidth,\n      strokeDashoffset: \"1100\",\n      strokeLinecap: strokeLinecap,\n      fill: \"none\",\n      style: {\n        strokeDashoffset: strokeDashoffset,\n        transition: transition\n      },\n      onTransitionEnd: onAnimationEnd\n    }), text);\n  };\n\n  Circle.defaultProps = {\n    progress: 0,\n    animate: true,\n    animationDuration: '1s',\n    showPercentage: true,\n    showPercentageSymbol: true,\n    progressColor: 'rgb(76, 154, 255)',\n    bgColor: '#ecedf0',\n    textColor: '#6b778c',\n    size: '100',\n    lineWidth: '25',\n    percentSpacing: 10,\n    textStyle: {\n      font: 'bold 4rem Helvetica, Arial, sans-serif'\n    }\n  };\n  return Circle;\n}(react_1.Component);\n\nexports.Circle = Circle;","map":null,"metadata":{},"sourceType":"script"}