{"ast":null,"code":"var _jsxFileName = \"/Users/zallzool/DevProjs/schedulsaur/src/frontend/src/components/TimeAvailability/Time.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SavedTimes from './SavedTimes';\nimport TimeTable from './TimeTable';\nimport { changeAvailable, view, clear } from '../../actions/timeActions';\n/**\n * Time\n * \n * @description Main component to create the Time Availability page\n */\n\nclass Time extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttons: this.props.time.saved.map(time => {\n        return {\n          text: 'View'\n        };\n      }),\n      isViewing: false,\n      table: [{\n        id: '1',\n        name: '',\n        time: '07-08 AM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '2',\n        name: '',\n        time: '08-09 AM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '3',\n        name: '',\n        time: '09-10 AM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '4',\n        name: '',\n        time: '10-11 AM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '5',\n        name: '',\n        time: '11-12 AM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '6',\n        name: '',\n        time: '12-01 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '7',\n        name: '',\n        time: '01-02 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '8',\n        name: '',\n        time: '02-03 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '9',\n        name: '',\n        time: '03-04 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '10',\n        name: '',\n        time: '04-05 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '11',\n        name: '',\n        time: '05-06 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '12',\n        name: '',\n        time: '05-06 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '13',\n        name: '',\n        time: '06-07 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '14',\n        name: '',\n        time: '07-08 PM',\n        available: [false, false, false, false, false, false, false]\n      }, {\n        id: '15',\n        name: '',\n        time: '08-09 PM',\n        available: [false, false, false, false, false, false, false]\n      }]\n    };\n\n    this.handleSelect = e => {\n      const row_id = e.target.getAttribute('row_id') - 1;\n      const col_id = e.target.getAttribute('col_id') - 1;\n      this.props.changeAvailable(row_id, col_id);\n    };\n\n    this.handleClick = e => {\n      this.props.view(e.target.id - 1);\n    };\n\n    this.handleClear = () => {\n      this.props.clear();\n    };\n\n    this.handleSave = () => {// *** need to send action to modify global state\n      // *** need to send action to modify gloabl state\n    };\n  }\n\n  render() {\n    const time = this.props.time;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Saved Availability\"), React.createElement(SavedTimes, {\n      onClick: this.handleClick,\n      saved: time.saved,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        margin: '10%'\n      },\n      className: \"button\",\n      id: \"button_right\",\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Create New\"))), React.createElement(\"div\", {\n      className: \"col s6 offset-s1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Select When You Are Available\"), React.createElement(\"h6\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Click all the boxes that correspond to the hours and days \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \"that you do not want to have class. Any white boxes will be considered free.\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(TimeTable, {\n      table: time.table,\n      isViewing: this.state.isViewing,\n      handleSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      id: \"button_left\",\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      className: \"button\",\n      id: \"button_right\",\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    time: state.time\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeAvailable: (isViewing, row_id, col_id) => {\n      dispatch(changeAvailable(isViewing, row_id, col_id));\n    },\n    view: id => {\n      dispatch(view(id));\n    },\n    clear: () => {\n      dispatch(clear());\n    }\n  };\n}; // 'connect' allows component to access the state from the store\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);","map":{"version":3,"sources":["/Users/zallzool/DevProjs/schedulsaur/src/frontend/src/components/TimeAvailability/Time.js"],"names":["React","Component","connect","SavedTimes","TimeTable","changeAvailable","view","clear","Time","state","buttons","props","time","saved","map","text","isViewing","table","id","name","available","handleSelect","e","row_id","target","getAttribute","col_id","handleClick","handleClear","handleSave","render","margin","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SavedTimes from './SavedTimes';\nimport TimeTable from './TimeTable';\nimport { changeAvailable, view, clear}  from '../../actions/timeActions';\n\n/**\n * Time\n * \n * @description Main component to create the Time Availability page\n */\n\nclass Time extends Component{\n\n  state = {\n\n    buttons: this.props.time.saved.map(time => {\n      return({text: 'View'})\n    }),\n\n    isViewing: false,\n\n    table: [\n        {id:'1', name:'', time:'07-08 AM', available: [false, false, false, false, false, false, false]},\n        {id:'2', name:'', time:'08-09 AM', available: [false, false, false, false, false, false, false]},\n        {id:'3', name:'', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n        {id:'4', name:'', time:'10-11 AM', available: [false, false, false, false, false, false, false]},\n        {id:'5', name:'', time:'11-12 AM', available: [false, false, false, false, false, false, false]},\n        {id:'6', name:'', time:'12-01 PM', available: [false, false, false, false, false, false, false]},\n        {id:'7', name:'', time:'01-02 PM', available: [false, false, false, false, false, false, false]},\n        {id:'8', name:'', time:'02-03 PM', available: [false, false, false, false, false, false, false]},\n        {id:'9', name:'', time:'03-04 PM', available: [false, false, false, false, false, false, false]},\n        {id:'10', name:'', time:'04-05 PM', available: [false, false, false, false, false, false, false]},\n        {id:'11', name:'', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n        {id:'12', name:'', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n        {id:'13', name:'', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n        {id:'14', name:'', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n        {id:'15', name:'', time:'08-09 PM', available: [false, false, false, false, false, false, false]}\n    ]\n    \n  }\n\n  handleSelect = (e) => {\n    const row_id = e.target.getAttribute('row_id')-1\n    const col_id = e.target.getAttribute('col_id')-1\n    this.props.changeAvailable(row_id, col_id);\n  }\n\n  /**\n   * handleClick\n   * \n   * @method\n   * @description called when user clicks on view button\n   */\n  handleClick = (e) => {\n\n      this.props.view(e.target.id-1)\n\n  }\n\n  /**\n   * handleClear\n   * \n   * @method\n   * @description called when user clicks the clear button\n   */\n  handleClear = () => {\n    this.props.clear();\n  }\n\n  /**\n   * handleSave\n   * \n   * @method\n   * @description called when user clicks the save button\n   */\n  handleSave = () => {\n\n    // *** need to send action to modify global state\n    // *** need to send action to modify gloabl state\n\n  }\n\n  render(){\n    const { time } = this.props;\n    return(\n      <div>\n        <div className='row'>\n\n          {/* // Saved Availability Section  */}\n\n          <div className='col s4'>\n            <h2 align='center' className='subtitle'>Saved Availability</h2>\n            <SavedTimes onClick={this.handleClick} saved={time.saved}/>\n            <div align='center'>\n              <button style={{margin:'10%'}} className='button' id='button_right' onClick={this.handleClear}>\n                Create New\n              </button>\n            </div>\n          </div>\n\n          {/* // Time Selection Table Section */}\n\n          <div className='col s6 offset-s1'>\n            <h2 align='center' className='subtitle'>Select When You Are Available</h2>\n            <h6 align='center'> \n              Click all the boxes that correspond to the hours and days <br />\n              that you do not want to have class. Any white boxes will be considered free.\n            </h6>\n            <div className='row'></div>\n            <TimeTable table={time.table} isViewing={this.state.isViewing} handleSelect={this.handleSelect}/>\n            <div align='right'>\n              <button className='button' id='button_left' onClick={this.handleClear}>\n                Clear\n              </button>\n              <button className='button' id='button_right' onClick={this.handleSave}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    time: state.time\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    changeAvailable: (isViewing, row_id, col_id) => { dispatch(changeAvailable(isViewing, row_id, col_id)) },\n    view: (id) => { dispatch(view(id)) },\n    clear: () => { dispatch(clear()) }\n  }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);"]},"metadata":{},"sourceType":"module"}