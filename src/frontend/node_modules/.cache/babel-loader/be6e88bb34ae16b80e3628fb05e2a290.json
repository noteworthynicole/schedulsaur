{"ast":null,"code":"var _jsxFileName = \"/Users/zallzool/DevProjs/schedulsaur/src/frontend/src/components/Dashboard/DashBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressWheel from './ProgressWheel';\nimport StudentInfo from './StudentInfo';\n/**\n * DashBoard\n * \n * @description Main component to create the Dashboard page\n */\n\nclass DashBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEdit: false,\n      tempM: this.props.student.major,\n      tempC: this.props.student.catalog_year,\n      tempE: this.props.student.expected_grad,\n      tempUT: this.props.student.units_this_quarter,\n      tempUP: this.props.student.units_per_quarter\n      /**\n       * handleChange\n       * \n       * @method\n       * @description called when input text is changing in StudentInfo component \n       */\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleEdit = () => {\n      if (this.state.isEdit === false) {\n        this.setState({\n          isEdit: !this.state.isEdit\n        });\n      }\n    };\n\n    this.handleSave = () => {\n      if (this.state.isEdit === true) {\n        this.setState({\n          isEdit: !this.state.isEdit\n        });\n      } // *** need to send action to modify global state \n      // *** need to send action to modify global state \n\n    };\n  }\n\n  render() {\n    const student = this.props.student;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"subtitle\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      style: {\n        paddingTop: '2%'\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ProgressWheel, {\n      progress: student.major_percent,\n      size: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Degree Progress\")), React.createElement(\"div\", {\n      style: {\n        paddingTop: '2%'\n      },\n      className: \"col s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ProgressWheel, {\n      progress: student.support_percent,\n      size: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Support Progress\"), React.createElement(ProgressWheel, {\n      progress: student.ge_percent,\n      size: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"GE Progress\")), React.createElement(\"div\", {\n      style: {\n        paddingTop: '1%'\n      },\n      className: \"col s4 offset-s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"subsubtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"span\", {\n      style: {\n        fontSize: '20px',\n        fontWeight: 'normal'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, ' ' + student.name)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Major:\", React.createElement(StudentInfo, {\n      id: \"tempM\",\n      info: this.state.tempM,\n      handleChange: this.handleChange,\n      edit: this.state.isEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Catalog Year:\", React.createElement(StudentInfo, {\n      id: \"tempC\",\n      info: this.state.tempC,\n      handleChange: this.handleChange,\n      edit: this.state.isEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Expected Graduation:\", React.createElement(StudentInfo, {\n      id: \"tempE\",\n      info: this.state.tempE,\n      handleChange: this.handleChange,\n      edit: this.state.isEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Units This Quarter:\", React.createElement(StudentInfo, {\n      id: \"tempUP\",\n      info: this.state.tempUP,\n      handleChange: this.handleChange,\n      edit: this.state.isEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Units Per Quarter:\", React.createElement(StudentInfo, {\n      id: \"tempUT\",\n      info: this.state.tempUT,\n      handleChange: this.handleChange,\n      edit: this.state.isEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        paddingTop: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      id: \"button_left\",\n      onClick: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(\"button\", {\n      className: \"button\",\n      id: \"button_right\",\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    student: state.student\n  };\n}; // 'connect' allows component to access the state from the store\n\n\nexport default connect(mapStateToProps)(DashBoard);","map":{"version":3,"sources":["/Users/zallzool/DevProjs/schedulsaur/src/frontend/src/components/Dashboard/DashBoard.js"],"names":["React","Component","connect","ProgressWheel","StudentInfo","DashBoard","state","isEdit","tempM","props","student","major","tempC","catalog_year","tempE","expected_grad","tempUT","units_this_quarter","tempUP","units_per_quarter","handleChange","e","setState","target","id","value","handleEdit","handleSave","render","paddingTop","major_percent","support_percent","ge_percent","fontSize","fontWeight","name","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressWheel from './ProgressWheel';\nimport StudentInfo from './StudentInfo';\n\n/**\n * DashBoard\n * \n * @description Main component to create the Dashboard page\n */\n\nclass DashBoard extends Component{\n\n    state = {\n        isEdit: false,\n        tempM: this.props.student.major,\n        tempC: this.props.student.catalog_year,\n        tempE: this.props.student.expected_grad,\n        tempUT: this.props.student.units_this_quarter,\n        tempUP: this.props.student.units_per_quarter\n    }\n\n    /**\n     * handleChange\n     * \n     * @method\n     * @description called when input text is changing in StudentInfo component \n     */\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    /**\n     * handleEdit\n     * @method \n     * @description called when edit profile button is clicked\n     */\n    handleEdit = () => {\n        if(this.state.isEdit===false){\n            this.setState({\n                isEdit: !this.state.isEdit\n            })\n        }\n    }\n\n\n    /**\n     * handleSave\n     * \n     * @method\n     * @description called when save button is clicked\n     */\n    handleSave = () => {\n        if(this.state.isEdit===true){\n            this.setState({\n                isEdit: !this.state.isEdit\n            })\n        }\n\n        // *** need to send action to modify global state \n        // *** need to send action to modify global state \n\n    }\n\n    render(){\n        const { student } = this.props;\n        return(\n            <div>\n                <h2  className='subtitle' align='center'>Dashboard</h2>\n                <div style={{paddingTop:'2%'}} className='row'>\n\n                    {/* // Left Section of Dashboard */}\n                    \n                    <div className='col s4'>\n                        <ProgressWheel progress={student.major_percent} size='400'/>\n                        <h5 align='center'>Degree Progress</h5>\n                    </div>\n                    <div style={{paddingTop:'2%'}} className='col s2'>\n                        <ProgressWheel progress={student.support_percent} size='150'/>\n                        <h5 align='center'>Support Progress</h5>\n                        <ProgressWheel progress={student.ge_percent} size='150'/>\n                        <h5 align='center'>GE Progress</h5>\n                    </div>\n\n                    {/* // Right Section of Dashboard */}\n\n                    <div style={{paddingTop:'1%'}} className='col s4 offset-s2'>\n                        <div className='subsubtitle'>\n                            <h5> Name:  \n                                <span style={{fontSize:'20px', fontWeight:'normal'}}>\n                                    {' ' + student.name}\n                                </span>\n                            </h5>\n                            <div className='row'></div>\n                            <div className='row'></div>\n                            <h5>Major:\n                                <StudentInfo id='tempM' info={this.state.tempM}\n                                             handleChange={this.handleChange} \n                                             edit={this.state.isEdit} />\n                            </h5>\n                            <h5>Catalog Year:\n                                <StudentInfo id='tempC' info={this.state.tempC}\n                                             handleChange={this.handleChange} \n                                             edit={this.state.isEdit} />\n                            </h5>\n                            <h5>Expected Graduation:\n                                <StudentInfo id='tempE' info={this.state.tempE}\n                                             handleChange={this.handleChange} \n                                             edit ={this.state.isEdit} />\n                            </h5>\n                            <div className='row'></div>\n                            <div className='row'></div>\n                            <h5>Units This Quarter:\n                                <StudentInfo id='tempUP' info={this.state.tempUP}\n                                             handleChange={this.handleChange} \n                                             edit ={this.state.isEdit} />\n                            </h5>\n                            <h5>Units Per Quarter:\n                                <StudentInfo id='tempUT' info={this.state.tempUT}\n                                             handleChange={this.handleChange} \n                                             edit ={this.state.isEdit} />\n                            </h5>\n                        </div>\n                        <div style={{paddingTop:'10%'}}>\n                            <button className='button' id='button_left' onClick={this.handleEdit}>\n                                Edit Profile\n                            </button>\n                            <button className='button' id='button_right' onClick={this.handleSave}>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        student: state.student\n    }\n}\n\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps)(DashBoard);"]},"metadata":{},"sourceType":"module"}